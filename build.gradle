/*
 * The MIT License (MIT)
 * Copyright (c) 2017 Sybit GmbH
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 */

plugins {
    id 'java-library'
    id 'jacoco'
    id 'idea'
    id 'maven-publish'
}

/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return version;
    }
}


group = 'com.sybit'
version = getVersionName()
description = "Java API for Airtable"

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.deprecation = true
    options.compilerArgs += ['-Xlint:deprecation']
    // options.compilerArgs += ['-Xlint:unchecked']
    sourceCompatibility = 17
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

        java {
            srcDir file('src/itest/java')
        }
        resources {
            srcDir file('src/itest/resources')
        }
    }
}

idea {
    module {
        testSources.from(sourceSets.integrationTest.java.srcDirs)
    }
}

repositories {
    mavenCentral()
}

configurations {
    integrationTestImplementation.extendsFrom implementation, testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly, testRuntimeOnly
}

dependencies {
    implementation 'com.konghq:unirest-java:3.14.5'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'org.json:json:20240303'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'commons-io:commons-io:2.16.1'
    implementation 'org.slf4j:slf4j-api:1.7.36'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'com.github.tomakehurst:wiremock:3.0.1'
    testImplementation 'org.slf4j:slf4j-jdk14:1.7.16'

    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.2'
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('jacocoTestReport') {
    reports {
        xml.required = true
    }
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    shouldRunAfter test
    useJUnitPlatform()

    // This is not needed, but I like to see which tests have run
    testLogging {
        events "passed", "skipped", "failed"
    }
}

publishing {
    publications {

        MyPublication(MavenPublication) {
            //we have to change scope from runtime to compile. Especially for Gson-lib.
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each { it.scope*.value = 'compile' }
            }

            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }
            groupId group
            artifactId rootProject.name
            version getVersionName()

            artifact sourcesJar
            artifact javadocJar
        }

    }
}

check.dependsOn integrationTest

